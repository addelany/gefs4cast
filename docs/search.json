[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"/articles/gefs-cog.html","id":"downscaling-to-finer-resolution","dir":"Articles","previous_headings":"","what":"Downscaling to finer resolution","title":"Cloud-Optimized Geotiff methods for GEFS","text":"GEFS predictions relatively coarse space. EFI terrestrial forecast, finer temporal scales may also desirable, driving 30min terrestrial forecast. Let us thus consider finer spatial temporal scale view. , need consider full global extent data. illustrative purposes, lets focus much smaller still considerable spatial scale northeastern US. define two views area, one original resolution finer spatial resolution. (possible use finer temporal resolution well, shown, necessary – temporal interpolation happen automatically, can perform step fly later .) reference, let’s first see raw data looks like level: plot chunk unnamed-chunk-7","code":"box <- c(-75, 40, -70, 44) ext <- list(t0 = as.character(min(datetime),iso),               t1 = as.character(max(datetime),iso),              left = box[1], right = box[3],              top = box[4], bottom = box[2])  v_orig <- cube_view(srs = \"EPSG:4326\",                     extent = ext,                     dx = 0.5, dy = 0.5,                      dt = \"PT3H\",                     aggregation = \"mean\",                      resampling = \"cubicspline\"     )  v_fine <- cube_view(srs = \"EPSG:4326\",                     extent = ext,                     dx = 0.1, dy = 0.1,                      dt = \"PT30M\",                     aggregation = \"mean\",                      resampling = \"cubicspline\"     ) t <- as.character(datetime[[3]], iso) t ## [1] \"2022-12-07T09:00:00\" raster_cube(gefs_cube, v_orig) |>     gdalcubes::select_bands(\"TMP\") |>     slice_time(datetime = t) |>    st_as_stars() |>     tm_shape() + tm_raster(palette=viridis(100), n = 100,                            legend.show=FALSE, style = \"cont\") +    tm_shape(spData::us_states) + tm_polygons(alpha=0, border.col = \"grey\")"},{"path":"/articles/gefs-cog.html","id":"temporal-interpolation","dir":"Articles","previous_headings":"","what":"Temporal interpolation","title":"Cloud-Optimized Geotiff methods for GEFS","text":"Temporal interpolation performed default, can interpolate data arbitrarily finer timescale. (Note fill_time(), result -missing temp data. Meanwhile, also note can ask arbitrarily fine time scale , v_orig data well.) plot chunk unnamed-chunk-9 illustrated examples, data cube can coerced stars object, can use classic manipulation techniques available stars, e.g. extract values particular set spatial points time. use classic tidyverse pivot resulting array simple data.frame site_id, datetime, predicted, variable chosen reference datetime . Working directly gdalcube however, can already also perform much richer calculations reduce_time, reduce_space, pixel_apply, chunk_apply functions gdalcubes packages.","code":"raster_cube(gefs_cube, v_fine) |>     gdalcubes::select_bands(\"TMP\") |>     slice_time(datetime = t) |>    st_as_stars() |>     tm_shape() + tm_raster(palette=viridis(100), n = 100,                           legend.show=FALSE, style = \"cont\") +    tm_shape(spData::us_states) + tm_polygons(alpha=0, border.col = \"grey\") # an intermediate time: t2 <- as.character(as_datetime(t) + minutes(30),  iso) t2 ## [1] \"2022-12-07T09:30:00\" raster_cube(gefs_cube, v_fine) |>     gdalcubes::select_bands(\"TMP\") |>     gdalcubes::fill_time(\"linear\") |>    slice_time(datetime = t2) |>    st_as_stars() |>     tm_shape() + tm_raster(palette=viridis(100), n = 100,                           legend.show=FALSE, style = \"cont\") +    tm_shape(spData::us_states) + tm_polygons(alpha=0, border.col = \"grey\") sites <- neon_coordinates() |>   tibble::as_tibble(rownames = \"site_id\") |>   sf::st_as_sf(coords= c(\"longitude\", \"latitude\"), crs=\"EPSG:4326\") ## Error in neon_coordinates(): could not find function \"neon_coordinates\" # We can need to extract band-wise, (or datetime-wise) # we get an sf object with timestamps as columns library(tidyverse) extract_by_band <- function(band, cube, sites){    datetime <- st_get_dimension_values(cube, \"time\")   y <- cube[band,,,] |>     split(\"time\") |>      st_extract(sites)      colnames(y) <- c(as.character(datetime), \"geometry\")   y <- y |> st_join(sites)      y |> as_tibble() |> select(-geometry) |>    pivot_longer(-site_id, names_to = \"datetime\", values_to=\"predicted\") |>   mutate(variable=band) }  cube <- raster_cube(gefs_cube, v) |> st_as_stars() df <- map_dfr(bandnames, extract_by_band, cube=cube, sites) ## Error in stopifnot(inherits(at, c(\"sf\", \"sfc\", \"matrix\"))): object 'sites' not found df ## function (x, df1, df2, ncp, log = FALSE)  ## { ##     if (missing(ncp))  ##         .Call(C_df, x, df1, df2, log) ##     else .Call(C_dnf, x, df1, df2, ncp, log) ## } ## <bytecode: 0x55645a099be0> ## <environment: namespace:stats>"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Carl Boettiger. Author, maintainer. Quinn Thomas. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Boettiger C, Thomas Q (2022). gefs4cast: Cloud-native Workflows NOAA Global Ensemble Forecast System Files. R package version 0.0.0.9900.","code":"@Manual{,   title = {gefs4cast: Cloud-native Workflows for NOAA Global Ensemble Forecast System Files},   author = {Carl Boettiger and Quinn Thomas},   year = {2022},   note = {R package version 0.0.0.9900}, }"},{"path":"/index.html","id":"access-noaas-global-ensemble-forecast-system-archive-on-aws","dir":"","previous_headings":"","what":"Cloud-native Workflows for NOAA Global Ensemble Forecast System Files","title":"Cloud-native Workflows for NOAA Global Ensemble Forecast System Files","text":"Cloud-native access downloading NOAA’s GEFS data. Caution package highly experimental yet suitable general use. Direct access EFI-processed GEFS forecasts NEON sites may available neon4cast package. Example scripts can seen inst/examples directory. variable definitions, see NOAA tables (selecting band numbers grib files, note band numbers differ 000 hour > 003 forecast)","code":""},{"path":[]},{"path":"/index.html","id":"r","dir":"","previous_headings":"","what":"R","title":"Cloud-native Workflows for NOAA Global Ensemble Forecast System Files","text":"","code":"library(arrow) library(dplyr) Sys.unsetenv(\"AWS_DEFAULT_REGION\") s3 <- s3_bucket(\"neon4cast-drivers/noaa/gefs-v12/stage1\",                 endpoint_override = \"data.ecoforecast.org\",                  anonymous = TRUE) df <- open_dataset(s3, partitioning=c(\"start_date\", \"cycle\")) df |> filter(start_date == \"2022-04-02\", cycle == \"00\", ensemble==1)"},{"path":"/index.html","id":"python","dir":"","previous_headings":"","what":"Python","title":"Cloud-native Workflows for NOAA Global Ensemble Forecast System Files","text":"","code":"import pyarrow.dataset as ds from pyarrow import fs  s3 = fs.S3FileSystem(endpoint_override = \"data.ecoforecast.org\", anonymous = True) dataset = ds.dataset(     \"neon4cast-drivers/noaa/gefs-v12/stage1\",     format=\"parquet\",     filesystem=s3,     partitioning=[\"start_date\", \"cycle\"] ) expression = (               (ds.field(\"start_date\") == \"2022-04-01\") &               (ds.field(\"cycle\") == 00) &               (ds.field(\"ensemble\") == 1)               ) ex = dataset.to_table(filter=expression)"},{"path":"/reference/gefs_cog.html","id":null,"dir":"Reference","previous_headings":"","what":"Stream NOAA GEFS GRIB to Cloud Optimized Geotif — gefs_cog","title":"Stream NOAA GEFS GRIB to Cloud Optimized Geotif — gefs_cog","text":"Stream NOAA GEFS GRIB Cloud Optimized Geotif","code":""},{"path":"/reference/gefs_cog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stream NOAA GEFS GRIB to Cloud Optimized Geotif — gefs_cog","text":"","code":"gefs_cog(   dest = \".\",   date = Sys.Date(),   cycle = \"00\",   ens_avg = FALSE,   series = \"atmos\",   set = \"pgrb2a\",   res = \"0p50\",   max_horizon = 840,   threads = 70,   gdal_ops = \"-co compress=zstd\" )"},{"path":"/reference/gefs_cog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stream NOAA GEFS GRIB to Cloud Optimized Geotif — gefs_cog","text":"dest destination directory date date forecast issued cycle hour forecast issued (00, 06, 12, 18) ens_avg just access ensemble average instead? series atmos series set GRIB dataset, default common atmospheric data res resolution, 0.50 may available time max_horizon maximum horizon threads parallel processes run gdal_ops options GDAL (e.g. compression)","code":""},{"path":"/reference/gefs_cog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stream NOAA GEFS GRIB to Cloud Optimized Geotif — gefs_cog","text":"invisibly, processx log","code":""},{"path":"/reference/gefs_cog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stream NOAA GEFS GRIB to Cloud Optimized Geotif — gefs_cog","text":"","code":"if (FALSE) { # interactive() gefs_cog() }"},{"path":"/reference/neon_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"NEON coordinates — neon_coordinates","title":"NEON coordinates — neon_coordinates","text":"access data.frame NEON coordinates NEON sites","code":""},{"path":"/reference/neon_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NEON coordinates — neon_coordinates","text":"","code":"neon_coordinates(   locations = paste0(\"https://github.com/eco4cast/neon4cast-noaa-download/\",     \"raw/master/noaa_download_site_list.csv\") )"},{"path":"/reference/neon_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NEON coordinates — neon_coordinates","text":"locations URL NEON locations csv file","code":""},{"path":"/reference/noaa_gefs.html","id":null,"dir":"Reference","previous_headings":"","what":"Stream NOAA GEFS GRIB to parquet — noaa_gefs","title":"Stream NOAA GEFS GRIB to parquet — noaa_gefs","text":"Stream NOAA GEFS GRIB parquet","code":""},{"path":"/reference/noaa_gefs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stream NOAA GEFS GRIB to parquet — noaa_gefs","text":"","code":"noaa_gefs(   date = Sys.Date(),   cycle = \"00\",   threads = 70,   gdal_ops = \"\",   s3 = arrow::s3_bucket(\"drivers\", endpoint_override = \"data.ecoforecast.org\"),   max_horizon = 840,   purge = TRUE,   quiet = FALSE,   dest = \".\",   locations = paste0(\"https://github.com/eco4cast/neon4cast-noaa-download/\",     \"raw/master/noaa_download_site_list.csv\"),   name_pattern = \"noaa/gefs-v12/stage1/{cycle_int}/{nice_date}/part-0.parquet\" )"},{"path":"/reference/noaa_gefs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stream NOAA GEFS GRIB to parquet — noaa_gefs","text":"date date forecast issued cycle hour forecast issued (00, 06, 12, 18) threads parallel processes run gdal_ops options GDAL (e.g. compression) s3 S3 bucket address, arrow::s3_bucket max_horizon maximum horizon purge logical, clear downloaded/converted tif? quiet logical, verbose output? dest destination directory locations access list download sites (lat/long) name_pattern Naming pattern upload bucket (glue format)","code":""},{"path":"/reference/noaa_gefs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stream NOAA GEFS GRIB to parquet — noaa_gefs","text":"invisibly, processx log","code":""},{"path":"/reference/noaa_gefs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stream NOAA GEFS GRIB to parquet — noaa_gefs","text":"","code":"if (FALSE) { # interactive() noaa_gefs() }"}]
